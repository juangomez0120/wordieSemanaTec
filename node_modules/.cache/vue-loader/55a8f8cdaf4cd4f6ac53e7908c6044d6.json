{"remainingRequest":"/Users/melissa/Desktop/semanatecwordie/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/melissa/Desktop/semanatecwordie/src/components/HelloWorld.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/melissa/Desktop/semanatecwordie/src/components/HelloWorld.vue","mtime":1631743556685},{"path":"/Users/melissa/Desktop/semanatecwordie/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/melissa/Desktop/semanatecwordie/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/melissa/Desktop/semanatecwordie/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/melissa/Desktop/semanatecwordie/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/melissa/Desktop/semanatecwordie/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojbGFuZGluZy10ZXh0ewogICAgbWFyZ2luOiAwOwogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgdG9wOiA1MCU7CiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpOwogICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpOwp9Cg=="},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8GA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"hello\">\n    <button v-if=\"!authenticated\" @click=\"login\">Login</button>\n    <!-- LOG IN-->\n    <div v-if=\"authenticated\">\n      <!-- darle estilo al botÃ³n de LOGOUT-->\n      <button @click=\"logout\">Logout</button>\n      <div class=\"container-fluid m-0 p-0\">\n        <div id=\"bar\" class=\"bg-primary p-4\">\n          <div class=\"row\">\n            <div class=\"col-7\">\n              <h5 class=\"align-text-top text-white\">DailyWord</h5>\n            </div>\n            <div class=\"col\">\n              <h5 class=\"align-text-top text-white\">Mis Palabras</h5>\n            </div>\n            <div class=\"col\">\n              <h5 class=\"align-text-top text-white\">Diccionario</h5>\n            </div>\n            <div class=\"col\">\n              <i class=\"bi-person-circle align-text-top\" style=\"font-size: 2rem; color: white\"></i>\n            </div>\n          </div>\n        </div>\n        <div id=\"landing-text\" class=\"\">\n          <div class=\"row\">\n            <p class=\"col-8 offset-3 fs-1 fw-bold\">Hola, {{firstName}}</p>\n          </div>\n          <div>\n            <p class=\"col-8 text-muted offset-3 fs-3\">You can only fail when you stop trying.</p>\n            <p class=\"col-8 text-muted offset-3 fs-3\">{{ palabra }}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport Firebase from '../firebase.js';\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport axios from \"axios\";\nexport default {\n    name: 'HelloWorld',\n    props: {\n    msg: String\n    },\n    data () {\n      return {\n        user: {\n          loggedIn: false,\n          data: {}\n        },\n        palabra: null\n      }  \n    },\n    computed: {\n        authenticated(){\n          return this.user.loggedIn\n        },\n        firstName(){\n          if (this.user.data.displayName) {\n            return this.user.data.displayName.split(' ')[0]\n          }\n          return null\n        }\n    },\n    methods: {\n      login() {\n        Firebase.login();\n      },\n      logout() {\n        Firebase.logout()\n      }\n    },\n    mounted: function() {\n      const auth = getAuth();\n      onAuthStateChanged( auth, user => {\n        if (user) {\n          this.user.loggedIn = true;\n          this.user.data = user;\n        }\n        else {\n          this.user.loggedIn = false;\n          this.user.data = {};\n        }\n      })\n      const options = {\n  method: 'GET',\n  url: 'https://wordsapiv1.p.rapidapi.com/words/',\n  params: {random: 'true'},\n  headers: {\n    'x-rapidapi-host': 'wordsapiv1.p.rapidapi.com',\n    'x-rapidapi-key': '97459d675emsh83b437ec412eba5p1ba43bjsn9d7291c09ad7'\n  }\n};\nconst self = this;\naxios.request(options).then(function (response) {\n\tconsole.log(response.data.word);\n  self.palabra = response.data.word;\n}).catch(function (error) {\n\tconsole.error(error);\n});\n    }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\n#landing-text{\n    margin: 0;\n    position: absolute;\n    top: 50%;\n    -ms-transform: translateY(-50%);\n    transform: translateY(-50%);\n}\n</style>\n"]}]}